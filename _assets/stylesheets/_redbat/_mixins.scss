
/*

MIXINS
-------------------------------------------
Table of Contents

- Font Face Import

*/



/*

FONT FACE IMPORT
-------------------------------------------
Mixin to help import fonts
------------------------------------------- */

@mixin embed-font($font-name, $font-filepath-and-name){
  @font-face {
    font-family: $font-name;
    src: url(asset_path($font-filepath-and-name+".eot")); /* IE9 Compat Modes */
    src: url(asset_path($font-filepath-and-name+".eot?#iefix")) format('embedded-opentype'), /* IE6-IE8 */
         url(asset_path($font-filepath-and-name+".woff")) format('woff'), /* Modern Browsers */
         url(asset_path($font-filepath-and-name+".ttf"))  format('truetype'), /* Safari, Android, iOS */
         url(asset_path($font-filepath-and-name+".svg#svgFontName")) format('svg'); /* Legacy iOS */
    }
}

/*

Media Queries
-------------------------------------------
Mixin to help import fonts
------------------------------------------- */

@mixin breakpoint($point) {
  @if $point == xxxl {
    @media (max-width: 1200px) { @content; }
  }
  @if $point == xxl {
    @media (max-width: 1000px) { @content; }
  }
  @if $point == xl {
    @media (max-width: 800px) { @content; }
  }
  @else if $point == l {
    @media (max-width: 768px) { @content; }
  }
  @else if $point == m {
    @media (max-width: 700px)  { @content; }
  }
  @else if $point == container {
    @media (max-width: 600px) { @content; }
  }
  @else if $point == s {
    @media (max-width: 400px)  { @content; }
  }
  @else if $point == xs {
    @media (max-width: 320px)  { @content; }
  }
}

// Here we define the breakpoints which will become the upper border for each media size.
// The function em-calc() calculates the em-value from a px-value.
$small-breakpoint:  em-calc(640)  !default;
$medium-breakpoint: em-calc(1024) !default;
$large-breakpoint:  em-calc(1440) !default;
$xlarge-breakpoint: em-calc(1920) !default;

// Here we define the lower and upper bounds for each media size
$small-range:   (0, $small-breakpoint) !default; /* 0, 640px */
$medium-range:  ($small-breakpoint  + em-calc(1), $medium-breakpoint) !default; /* 641px, 1024px */
$large-range:   ($medium-breakpoint + em-calc(1), $large-breakpoint)  !default; /* 1025px, 1440px */
$xlarge-range:  ($large-breakpoint  + em-calc(1), $xlarge-breakpoint) !default; /* 1441px, 1920px */
$xxlarge-range: ($xlarge-breakpoint + em-calc(1), em-calc(99999999)) !default; /* 1921px, ... */

// Media Queries
$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

$small-up: $screen !default;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})" !default;

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})" !default;

$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})" !default;
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})" !default;

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})" !default;
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})" !default;

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})" !default;
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})" !default;

